services:
    app.service.convert:
        class: AppBundle\Service\UnitConvertService

    app.listener.volume_unit:
        class: AppBundle\Listener\VolumeUnitListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    app.listener.weight_unit:
        class: AppBundle\Listener\WeightUnitListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    app.listener.day:
        class: AppBundle\Listener\DayToWeekAssignerListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    app.listener.week:
        class: AppBundle\Listener\WeekRecalculateListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    app.listener.position:
        class: AppBundle\Listener\PositionListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postFlush }

    app.listener.recipe:
        class: AppBundle\Listener\PositionCollectionListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    app.service.summarize:
        class: AppBundle\Service\SummarizeService

    app.service.swiss_import:
        class: AppBundle\Service\SwissDatabaseExcelImportService
        arguments: ['@doctrine.orm.entity_manager']

    app.admin.ingredient:
        class: AppBundle\Admin\IngredientAdmin
        arguments: [~, AppBundle\Entity\Ingredient\Ingredient, ~]
        calls:
            - [setSubClasses, [{ Weight: AppBundle\Entity\Ingredient\WeightIngredient, Volume: AppBundle\Entity\Ingredient\VolumeIngredient }]]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Ingredient, group: Base }

    app.admin.unit:
        class: AppBundle\Admin\UnitAdmin
        arguments: [~, AppBundle\Entity\Unit\Unit, ~]
        calls:
            - [setSubClasses, [{ Weight: AppBundle\Entity\Unit\WeightUnit, Volume: AppBundle\Entity\Unit\VolumeUnit }]]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Unit, group: Base }

    app.admin.recipe:
        class: AppBundle\Admin\RecipeAdmin
        arguments: [~, AppBundle\Entity\Ingredient\Recipe, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Recipe, group: Base }

    app.admin.recipe_ingredient:
        class: AppBundle\Admin\RecipeIngredientAdmin
        arguments: [~, AppBundle\Entity\Ingredient\RecipeIngredient, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false }

    app.admin.measure_embeddable:
        class: AppBundle\Admin\MeasureAdmin
        arguments: [~, AppBundle\Entity\Measure, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false }

    app.admin.position_type:
        class: AppBundle\Admin\PositionTypeAdmin
        arguments: [~, AppBundle\Entity\Day\PositionType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Position Type, group: Base }

    app.admin.day_position:
        class: AppBundle\Admin\DayPositionAdmin
        arguments: [~, AppBundle\Entity\Day\Position, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false }

    app.admin.day:
        class: AppBundle\Admin\DayAdmin
        arguments: [~, AppBundle\Entity\Day\Day, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Day, group: Day }